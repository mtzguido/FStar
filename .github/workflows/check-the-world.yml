name: Build F* and test related projects
on:
  push:
  workflow_dispatch:

# TODO:
# Is there a way to set the default container? this is stupid
# Move to the regular fstar-ci-base too

defaults:
  run:
    # Setting the default shell to bash. This is not only more standard,
    # but also makes sure that we run with -o pipefail, so we can safely
    # pipe data (such as | tee LOG) without missing out on failures
    # and getting false positives. If you want to change the default shell,
    # keep in mind you need a way to handle this.
    shell: bash

jobs:
  fstar-build:
    runs-on: [linux, X64]
    container: mtzguido/fstar-base-testing
    steps:
      - name: Cleanup
        run: find . -delete
      - run: echo "HOME=/home/opam" >> $GITHUB_ENV

      - uses: actions/checkout@master
        with:
          path: FStar/

      - name: Prep
        run: |
          # In case we edited fstar.opam, install new deps here
          # This will most likely fail to like krml below, what's going on?
          # eval $(opam env)
          # opam install --confirm-level=unsafe-yes --deps-only ./FStar/fstar.opam

      - name: Build
        run: |
          eval $(opam env)
          make -C FStar -skj$(nproc) ADMIT=1

      - name: Tar for artifact
        run: tar -cvf FStar.tar --exclude=FStar/.git --exclude=FStar/ocaml/ FStar

      - name: Save artifact
        uses: actions/upload-artifact@master
        with:
          path: FStar.tar
          name: FStar
          retention-days: 1 # revisit

  fstar-test:
    runs-on: [linux, X64]
    container: mtzguido/fstar-base-testing
    needs: fstar-build
    steps:
      - name: Cleanup
        run: find . -delete
      - run: echo "HOME=/home/opam" >> $GITHUB_ENV

      - name: Get FStar
        uses: actions/download-artifact@master
        with:
          name: FStar
          path: .
      - name: Untar
        run: tar xf FStar.tar
      - run: echo "FSTAR_HOME=$(pwd)/FStar" >> $GITHUB_ENV

      - name: Test
        run: |
          eval $(opam env)
          make -C FStar -skj$(nproc) ci-uregressions

  fstar-test-boot:
    runs-on: [linux, X64]
    container: mtzguido/fstar-base-testing
    needs: fstar-build
    steps:
      - name: Cleanup
        run: find . -delete
      - run: echo "HOME=/home/opam" >> $GITHUB_ENV

      - name: Get FStar
        uses: actions/download-artifact@master
        with:
          name: FStar
          path: .
      - name: Untar
        run: tar xf FStar.tar
      - run: echo "FSTAR_HOME=$(pwd)/FStar" >> $GITHUB_ENV

      - name: Bootstrap
        run: |
          eval $(opam env)
          make -C FStar -skj$(nproc) full-bootstrap

      - name: Check diff
        run: |
          cd FStar/
          echo "git status:"
          git status
          FAILED=false
          if ! git diff --exit-code ocaml/; then
            echo "::group::DIFF"
            git diff
            echo "::endgroup::"
            FAILED=true
          fi
          if git ls-files --others --exclude-standard -- ocaml/ | grep -q; then
            echo "::group::EXTRA FILES"
            git diff
            echo "::endgroup::"
            FAILED=true
          fi
          if $FAILED; then false; fi

  krml-build:
    runs-on: [linux, X64]
    container: mtzguido/fstar-base-testing
    needs: fstar-build
    steps:
      - name: Cleanup
        run: find . -delete
      - run: echo "HOME=/home/opam" >> $GITHUB_ENV

      - name: Get FStar
        uses: actions/download-artifact@master
        with:
          name: FStar
          path: .
      - name: Untar
        run: tar xf FStar.tar
      - run: echo "FSTAR_HOME=$(pwd)/FStar" >> $GITHUB_ENV

      - name: Clone karamel
        uses: actions/checkout@master
        with:
          path: karamel/
          repository: FStarLang/karamel

      - name: Prep
        run: |
          eval $(opam env)
          # Fails mysteriously:
          #
          # Error:  Package conflict!
          #   * No agreement on the version of ocaml:
          #     - (invariant) -> ocaml-base-compiler = 4.14.2 -> ocaml = 4.14.2
          # No solution found, exiting
          #     - karamel -> fstar -> ocaml < 4.06.0
          #     You can temporarily relax the switch invariant with `--update-invariant'
          #   * No agreement on the version of ocaml-base-compiler:
          #     - (invariant) -> ocaml-base-compiler = 4.14.2
          #     - karamel -> fstar -> ocaml < 4.06.0 -> ocaml-base-compiler = 3.07+1
          #   * Missing dependency:
          #     - karamel -> fstar -> z3 = 4.8.5 -> conf-python-2-7
          #     depends on the unavailable system package 'python2.7'. Use `--no-depexts' to attempt installation anyway, or it is possible that a depext package name in the opam file is incorrect.
          #   * Missing dependency:
          #     - karamel -> fstar -> ocaml < 4.06.0 -> ocaml-variants >= 3.11.1 -> ocaml-beta
          #     unmet availability conditions: 'enable-ocaml-beta-repository'
          #   * Missing dependency:
          #     - karamel -> fstar -> ocaml < 4.06.0 -> ocaml-variants >= 3.11.1 -> system-msvc
          #     unmet availability conditions: 'os = "win32"'
          # 
          # opam install --confirm-level=unsafe-yes --deps-only ./karamel/karamel.opam

      - name: Build krml
        run: |
          eval $(opam env)
          make -C karamel -skj$(nproc)

      - name: Tar for artifact
        run: tar -cvf karamel.tar --exclude=karamel/.git karamel

      - name: Save artifact
        uses: actions/upload-artifact@master
        with:
          path: karamel.tar
          name: karamel
          retention-days: 1 # revisit
      
  krml-test:
    runs-on: [linux, X64]
    container: mtzguido/fstar-base-testing
    needs:
      - fstar-build
      - krml-build
    steps:
      - name: Cleanup
        run: find . -delete
      - run: echo "HOME=/home/opam" >> $GITHUB_ENV

      - name: Get FStar
        uses: actions/download-artifact@master
        with:
          name: FStar
          path: .
      - name: Untar
        run: tar xf FStar.tar
      - run: echo "FSTAR_HOME=$(pwd)/FStar" >> $GITHUB_ENV

      - name: Get karamel
        uses: actions/download-artifact@master
        with:
          name: karamel
          path: .
      - name: Untar
        run: tar xf karamel.tar
      - run: echo "KRML_HOME=$(pwd)/karamel" >> $GITHUB_ENV

      - name: Test
        run: |
          eval $(opam env)
          make -C karamel -skj$(nproc) test

  steel-build:
    runs-on: [linux, X64]
    container: mtzguido/fstar-base-testing
    needs:
      - fstar-build
      - krml-build
    steps:
      - name: Cleanup
        run: find . -delete
      - run: echo "HOME=/home/opam" >> $GITHUB_ENV

      - name: Get FStar
        uses: actions/download-artifact@master
        with:
          name: FStar
          path: .
      - name: Untar
        run: tar xf FStar.tar
      - run: echo "FSTAR_HOME=$(pwd)/FStar" >> $GITHUB_ENV

      - name: Get karamel
        uses: actions/download-artifact@master
        with:
          name: karamel
          path: .
      - name: Untar
        run: tar xf karamel.tar
      - run: echo "KRML_HOME=$(pwd)/karamel" >> $GITHUB_ENV

      - name: Clone steel
        uses: actions/checkout@master
        with:
          path: steel/
          repository: FStarLang/steel

      - name: Build
        run: |
          eval $(opam env)
          make -C steel -skj$(nproc)

      - name: Tar for artifact
        run: tar -cvf steel.tar --exclude=steel/.git steel

      - name: Save artifact
        uses: actions/upload-artifact@master
        with:
          path: steel.tar
          name: steel
          retention-days: 1 # revisit

  steel-test:
    runs-on: [linux, X64]
    container: mtzguido/fstar-base-testing
    needs:
      - fstar-build
      - krml-build
      - steel-build
    steps:
      - name: Cleanup
        run: find . -delete
      - run: echo "HOME=/home/opam" >> $GITHUB_ENV

      - name: Get FStar
        uses: actions/download-artifact@master
        with:
          name: FStar
          path: .
      - name: Untar
        run: tar xf FStar.tar
      - run: echo "FSTAR_HOME=$(pwd)/FStar" >> $GITHUB_ENV

      - name: Get karamel
        uses: actions/download-artifact@master
        with:
          name: karamel
          path: .
      - name: Untar
        run: tar xf karamel.tar
      - run: echo "KRML_HOME=$(pwd)/karamel" >> $GITHUB_ENV

      - name: Get steel
        uses: actions/download-artifact@master
        with:
          name: steel
          path: .
      - name: Untar
        run: tar xf steel.tar
      - run: echo "STEEL_HOME=$(pwd)/steel" >> $GITHUB_ENV

      - name: Test
        run: |
          eval $(opam env)
          make -C steel -skj$(nproc) test

  pulse-build:
    runs-on: [linux, X64]
    container: mtzguido/fstar-base-testing
    needs:
      - fstar-build
      - krml-build
    steps:
      - name: Cleanup
        run: find . -delete
      - run: echo "HOME=/home/opam" >> $GITHUB_ENV

      - name: Get FStar
        uses: actions/download-artifact@master
        with:
          name: FStar
          path: .
      - name: Untar
        run: tar xf FStar.tar
      - run: echo "FSTAR_HOME=$(pwd)/FStar" >> $GITHUB_ENV

      - name: Get karamel
        uses: actions/download-artifact@master
        with:
          name: karamel
          path: .
      - name: Untar
        run: tar xf karamel.tar
      - run: echo "KRML_HOME=$(pwd)/karamel" >> $GITHUB_ENV

      - name: Clone pulse
        uses: actions/checkout@master
        with:
          path: pulse/
          repository: FStarLang/pulse

      - name: Build
        run: |
          eval $(opam env)
          make -C pulse -skj$(nproc)

      - name: Tar for artifact
        run: tar -cvf pulse.tar --exclude=pulse/.git pulse

      - name: Save artifact
        uses: actions/upload-artifact@master
        with:
          path: pulse.tar
          name: pulse
          retention-days: 1 # revisit

  pulse-test:
    runs-on: [linux, X64]
    container: mtzguido/fstar-base-testing
    needs:
      - fstar-build
      - krml-build
      - pulse-build
    steps:
      - name: Cleanup
        run: find . -delete
      - run: echo "HOME=/home/opam" >> $GITHUB_ENV

      - name: Get FStar
        uses: actions/download-artifact@master
        with:
          name: FStar
          path: .
      - name: Untar
        run: tar xf FStar.tar
      - run: echo "FSTAR_HOME=$(pwd)/FStar" >> $GITHUB_ENV

      - name: Get karamel
        uses: actions/download-artifact@master
        with:
          name: karamel
          path: .
      - name: Untar
        run: tar xf karamel.tar
      - run: echo "KRML_HOME=$(pwd)/karamel" >> $GITHUB_ENV

      - name: Get pulse
        uses: actions/download-artifact@master
        with:
          name: pulse
          path: .
      - name: Untar
        run: tar xf pulse.tar
      - run: echo "PULSE_HOME=$(pwd)/pulse" >> $GITHUB_ENV

      - name: Test
        run: |
          eval $(opam env)
          make -C pulse -skj$(nproc) test

  hacl-build:
    runs-on: [linux, X64]
    container: mtzguido/fstar-base-testing
    needs:
      - fstar-build
      - krml-build
    steps:
      - name: Cleanup
        run: find . -delete
      - run: echo "HOME=/home/opam" >> $GITHUB_ENV

      - name: Get FStar
        uses: actions/download-artifact@master
        with:
          name: FStar
          path: .
      - name: Untar
        run: tar xf FStar.tar
      - run: echo "FSTAR_HOME=$(pwd)/FStar" >> $GITHUB_ENV

      - name: Get karamel
        uses: actions/download-artifact@master
        with:
          name: karamel
          path: .
      - name: Untar
        run: tar xf karamel.tar
      - run: echo "KRML_HOME=$(pwd)/karamel" >> $GITHUB_ENV

      - name: Clone hacl-star
        uses: actions/checkout@master
        with:
          path: hacl-star/
          repository: hacl-star/hacl-star

      - run: echo "HACL_HOME=$(pwd)/hacl-star" >> $GITHUB_ENV

      - name: Get Vale
        run: ./hacl-star/tools/get_vale.sh

      - name: Build
        run: |
          eval $(opam env)
          make -C hacl-star -skj$(nproc) OTHERFLAGS='--admit_smt_queries true'

      - name: Tar for artifact
        run: tar -cvf hacl-star.tar --exclude=hacl-star/.git hacl-star

      - name: Save artifact
        uses: actions/upload-artifact@master
        with:
          path: hacl-star.tar
          name: hacl-star
          retention-days: 1 # revisit

  hacl-star-test:
    runs-on: [linux, X64]
    container: mtzguido/fstar-base-testing
    needs:
      - fstar-build
      - krml-build
      - hacl-build
    steps:
      - name: Cleanup
        run: find . -delete
      - run: echo "HOME=/home/opam" >> $GITHUB_ENV

      - name: Get FStar
        uses: actions/download-artifact@master
        with:
          name: FStar
          path: .
      - name: Untar
        run: tar xf FStar.tar
      - run: echo "FSTAR_HOME=$(pwd)/FStar" >> $GITHUB_ENV

      - name: Get karamel
        uses: actions/download-artifact@master
        with:
          name: karamel
          path: .
      - name: Untar
        run: tar xf karamel.tar
      - run: echo "KRML_HOME=$(pwd)/karamel" >> $GITHUB_ENV

      - name: Get hacl-star
        uses: actions/download-artifact@master
        with:
          name: hacl-star
          path: .
      - name: Untar
        run: tar xf hacl-star.tar
      - run: echo "HACL_HOME=$(pwd)/hacl-star" >> $GITHUB_ENV

      - name: Test
        run: |
          eval $(opam env)
          make -C hacl-star -skj$(nproc) test
